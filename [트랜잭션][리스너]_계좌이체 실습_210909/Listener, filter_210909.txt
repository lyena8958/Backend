고급 웹 프로그래밍
- 리스터
- 필터
	=> 프레임워크에서 기본적으로 제공되는 경우 多
		Spring

- 자바에서는 다중상속이 안되는데, 인터페이스를 지원할수있기 때문에 다중상속한것과 같은 효과를 얻을 수 있다.
[ 리스너 ] 
- 리스너생성시 인터페이스를 여러 종류의 임플ㄹ리먼츠를받을수있다 - lifecycle 많이사용(톰캣의 시작을 감지(인지) initialzed 자동호출)
	웹 환경에서 발생하는 특정 이벤트상황을 모니터링하다가 실행되는 특수한 형태의 서블릿
	-> 특정 이벤트에 따라 실행되는 인터페이스를 구현한 클래스
	@WebListener <<< 애너테이센(어노테이션) 리스너임을 강조
	(DB대신으로 사용된다.)
	-> 웹 어플리케이션에 초기 데이터를 공급할 때 주로 리스너를 사용(초기서비스(초기데이터)-테스트)
	-> 특정 상황에 따라 자동으로 동작하는 프로그램을 구현
	ex) 세션 장바구니에 물품을 추가하면 자동으로 계산(세션이 동작하는걸 기다렸다가 동작)
            ↓
	이러한 동작때문에 단독으로 사용되지 않는다.
	↓
	"초기화 매개변수"
	

[ 초기화 매개변수 ]-매번 새로 데이터를 주입(세션 장바구니와 잘맞다. → 매번 0으로 세팅하고 계산만 함)
	웹 어플리케이션 외부에서 웹 어플리케이션이 구동될 때 로딩시킬 수 있는 정보
	별도의 설정을 하는 이유 : 웹 어플리케이션 전반에서 공통적으로 사용하는 목적으로 설정
	└> 높은 응집도★★★ (무얼 하나를 할 때 하나만 찾으면 할 수 있는 것)
	"contol.jsp" <-------- 1) jsp를 사용할 필요가 없다. → java 2) 응집도가 낮다 --> 높여야 됨!
							   (└>action으로 넘어온 코드를 일일이 코드에 찾아가서 봐야함)
	앞으로를 생각했을 때 외부로 갖고옴에 따라 응집도를 높이자.
	[일반적으로 프로그램을 동작시킬 때 필요한 기본정보는 	
	소스코드 내에 하드코딩하지 않고 별도의 환경설정 파일 통해 제공한다!]
	//약간 DAO에서 DBCP데려온것같은 그런느낌
	-> web.xml에서 설정하는 경우가 많음  ------ 이전에 JNDI를 설정한 것과 비슷하다.
	or -> 서블릿 기반으로 컨트롤을 돌아가게 된다면!!! @ 어노테이션으로 설정

--------------------------------------------------------------------------------------------------------------------------

필터
	특수한 기능을 수행하는 서블릿
	ex) 정수기 필터
	사용자의 요청을 처리하기 전에 request, response 객체들을 가로채서
	사전에 필터에 정의된 기능을 수행한 후, 
	원래 요청을 처리해줌!
	-> 국제화(다국어 처리) 캐릭터인코딩 UTF-8
	-> 로깅처리
	








